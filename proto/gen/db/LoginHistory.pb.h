// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db/LoginHistory.proto

#ifndef PROTOBUF_db_2fLoginHistory_2eproto__INCLUDED
#define PROTOBUF_db_2fLoginHistory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace db {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

class LoginRecored;
class PlayerLoginHistory;
class LoginHistory;
class LoginHistory__PrimaryKey;
class LoginHistory__MaxLength;
class LoginHistory__Index;
class LoginLatest;
class LoginLatest__PrimaryKey;

// ===================================================================

class LoginRecored : public ::google::protobuf::Message {
 public:
  LoginRecored();
  virtual ~LoginRecored();

  LoginRecored(const LoginRecored& from);

  inline LoginRecored& operator=(const LoginRecored& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRecored& default_instance();

  void Swap(LoginRecored* other);

  // implements Message ----------------------------------------------

  LoginRecored* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRecored& from);
  void MergeFrom(const LoginRecored& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 area = 1;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 1;
  inline ::google::protobuf::uint32 area() const;
  inline void set_area(::google::protobuf::uint32 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.LoginRecored)
 private:
  inline void set_has_area();
  inline void clear_has_area();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 area_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginRecored* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginHistory : public ::google::protobuf::Message {
 public:
  PlayerLoginHistory();
  virtual ~PlayerLoginHistory();

  PlayerLoginHistory(const PlayerLoginHistory& from);

  inline PlayerLoginHistory& operator=(const PlayerLoginHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginHistory& default_instance();

  void Swap(PlayerLoginHistory* other);

  // implements Message ----------------------------------------------

  PlayerLoginHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLoginHistory& from);
  void MergeFrom(const PlayerLoginHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.LoginRecored latestLogin = 1;
  inline int latestlogin_size() const;
  inline void clear_latestlogin();
  static const int kLatestLoginFieldNumber = 1;
  inline const ::db::LoginRecored& latestlogin(int index) const;
  inline ::db::LoginRecored* mutable_latestlogin(int index);
  inline ::db::LoginRecored* add_latestlogin();
  inline const ::google::protobuf::RepeatedPtrField< ::db::LoginRecored >&
      latestlogin() const;
  inline ::google::protobuf::RepeatedPtrField< ::db::LoginRecored >*
      mutable_latestlogin();

  // @@protoc_insertion_point(class_scope:db.PlayerLoginHistory)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::LoginRecored > latestlogin_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginHistory* default_instance_;
};
// -------------------------------------------------------------------

class LoginHistory__PrimaryKey : public ::google::protobuf::Message {
 public:
  LoginHistory__PrimaryKey();
  virtual ~LoginHistory__PrimaryKey();

  LoginHistory__PrimaryKey(const LoginHistory__PrimaryKey& from);

  inline LoginHistory__PrimaryKey& operator=(const LoginHistory__PrimaryKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginHistory__PrimaryKey& default_instance();

  void Swap(LoginHistory__PrimaryKey* other);

  // implements Message ----------------------------------------------

  LoginHistory__PrimaryKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginHistory__PrimaryKey& from);
  void MergeFrom(const LoginHistory__PrimaryKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.LoginHistory._PrimaryKey)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gid_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginHistory__PrimaryKey* default_instance_;
};
// -------------------------------------------------------------------

class LoginHistory__MaxLength : public ::google::protobuf::Message {
 public:
  LoginHistory__MaxLength();
  virtual ~LoginHistory__MaxLength();

  LoginHistory__MaxLength(const LoginHistory__MaxLength& from);

  inline LoginHistory__MaxLength& operator=(const LoginHistory__MaxLength& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginHistory__MaxLength& default_instance();

  void Swap(LoginHistory__MaxLength* other);

  // implements Message ----------------------------------------------

  LoginHistory__MaxLength* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginHistory__MaxLength& from);
  void MergeFrom(const LoginHistory__MaxLength& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 openid = 1 [default = 32];
  inline bool has_openid() const;
  inline void clear_openid();
  static const int kOpenidFieldNumber = 1;
  inline ::google::protobuf::uint32 openid() const;
  inline void set_openid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.LoginHistory._MaxLength)
 private:
  inline void set_has_openid();
  inline void clear_has_openid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 openid_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginHistory__MaxLength* default_instance_;
};
// -------------------------------------------------------------------

class LoginHistory__Index : public ::google::protobuf::Message {
 public:
  LoginHistory__Index();
  virtual ~LoginHistory__Index();

  LoginHistory__Index(const LoginHistory__Index& from);

  inline LoginHistory__Index& operator=(const LoginHistory__Index& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginHistory__Index& default_instance();

  void Swap(LoginHistory__Index* other);

  // implements Message ----------------------------------------------

  LoginHistory__Index* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginHistory__Index& from);
  void MergeFrom(const LoginHistory__Index& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  inline const ::std::string& gid() const;
  inline void set_gid(const ::std::string& value);
  inline void set_gid(const char* value);
  inline void set_gid(const char* value, size_t size);
  inline ::std::string* mutable_gid();
  inline ::std::string* release_gid();
  inline void set_allocated_gid(::std::string* gid);

  // optional string openid = 2;
  inline bool has_openid() const;
  inline void clear_openid();
  static const int kOpenidFieldNumber = 2;
  inline const ::std::string& openid() const;
  inline void set_openid(const ::std::string& value);
  inline void set_openid(const char* value);
  inline void set_openid(const char* value, size_t size);
  inline ::std::string* mutable_openid();
  inline ::std::string* release_openid();
  inline void set_allocated_openid(::std::string* openid);

  // @@protoc_insertion_point(class_scope:db.LoginHistory._Index)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_openid();
  inline void clear_has_openid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gid_;
  ::std::string* openid_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginHistory__Index* default_instance_;
};
// -------------------------------------------------------------------

class LoginHistory : public ::google::protobuf::Message {
 public:
  LoginHistory();
  virtual ~LoginHistory();

  LoginHistory(const LoginHistory& from);

  inline LoginHistory& operator=(const LoginHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginHistory& default_instance();

  void Swap(LoginHistory* other);

  // implements Message ----------------------------------------------

  LoginHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginHistory& from);
  void MergeFrom(const LoginHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LoginHistory__PrimaryKey _PrimaryKey;
  typedef LoginHistory__MaxLength _MaxLength;
  typedef LoginHistory__Index _Index;

  // accessors -------------------------------------------------------

  // required uint64 gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  inline ::google::protobuf::uint64 gid() const;
  inline void set_gid(::google::protobuf::uint64 value);

  // required uint32 area = 2;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 2;
  inline ::google::protobuf::uint32 area() const;
  inline void set_area(::google::protobuf::uint32 value);

  // optional .db.PlayerLoginHistory history = 3;
  inline bool has_history() const;
  inline void clear_history();
  static const int kHistoryFieldNumber = 3;
  inline const ::db::PlayerLoginHistory& history() const;
  inline ::db::PlayerLoginHistory* mutable_history();
  inline ::db::PlayerLoginHistory* release_history();
  inline void set_allocated_history(::db::PlayerLoginHistory* history);

  // @@protoc_insertion_point(class_scope:db.LoginHistory)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_area();
  inline void clear_has_area();
  inline void set_has_history();
  inline void clear_has_history();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gid_;
  ::db::PlayerLoginHistory* history_;
  ::google::protobuf::uint32 area_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginHistory* default_instance_;
};
// -------------------------------------------------------------------

class LoginLatest__PrimaryKey : public ::google::protobuf::Message {
 public:
  LoginLatest__PrimaryKey();
  virtual ~LoginLatest__PrimaryKey();

  LoginLatest__PrimaryKey(const LoginLatest__PrimaryKey& from);

  inline LoginLatest__PrimaryKey& operator=(const LoginLatest__PrimaryKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginLatest__PrimaryKey& default_instance();

  void Swap(LoginLatest__PrimaryKey* other);

  // implements Message ----------------------------------------------

  LoginLatest__PrimaryKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginLatest__PrimaryKey& from);
  void MergeFrom(const LoginLatest__PrimaryKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.LoginLatest._PrimaryKey)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gid_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginLatest__PrimaryKey* default_instance_;
};
// -------------------------------------------------------------------

class LoginLatest : public ::google::protobuf::Message {
 public:
  LoginLatest();
  virtual ~LoginLatest();

  LoginLatest(const LoginLatest& from);

  inline LoginLatest& operator=(const LoginLatest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginLatest& default_instance();

  void Swap(LoginLatest* other);

  // implements Message ----------------------------------------------

  LoginLatest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginLatest& from);
  void MergeFrom(const LoginLatest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LoginLatest__PrimaryKey _PrimaryKey;

  // accessors -------------------------------------------------------

  // required uint64 gid = 1;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 1;
  inline ::google::protobuf::uint64 gid() const;
  inline void set_gid(::google::protobuf::uint64 value);

  // required uint32 area = 2;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 2;
  inline ::google::protobuf::uint32 area() const;
  inline void set_area(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.LoginLatest)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_area();
  inline void clear_has_area();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gid_;
  ::google::protobuf::uint32 area_;
  friend void  protobuf_AddDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_AssignDesc_db_2fLoginHistory_2eproto();
  friend void protobuf_ShutdownFile_db_2fLoginHistory_2eproto();

  void InitAsDefaultInstance();
  static LoginLatest* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginRecored

// required uint32 area = 1;
inline bool LoginRecored::has_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRecored::set_has_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRecored::clear_has_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRecored::clear_area() {
  area_ = 0u;
  clear_has_area();
}
inline ::google::protobuf::uint32 LoginRecored::area() const {
  // @@protoc_insertion_point(field_get:db.LoginRecored.area)
  return area_;
}
inline void LoginRecored::set_area(::google::protobuf::uint32 value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:db.LoginRecored.area)
}

// required uint32 time = 2;
inline bool LoginRecored::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRecored::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRecored::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRecored::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 LoginRecored::time() const {
  // @@protoc_insertion_point(field_get:db.LoginRecored.time)
  return time_;
}
inline void LoginRecored::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:db.LoginRecored.time)
}

// -------------------------------------------------------------------

// PlayerLoginHistory

// repeated .db.LoginRecored latestLogin = 1;
inline int PlayerLoginHistory::latestlogin_size() const {
  return latestlogin_.size();
}
inline void PlayerLoginHistory::clear_latestlogin() {
  latestlogin_.Clear();
}
inline const ::db::LoginRecored& PlayerLoginHistory::latestlogin(int index) const {
  // @@protoc_insertion_point(field_get:db.PlayerLoginHistory.latestLogin)
  return latestlogin_.Get(index);
}
inline ::db::LoginRecored* PlayerLoginHistory::mutable_latestlogin(int index) {
  // @@protoc_insertion_point(field_mutable:db.PlayerLoginHistory.latestLogin)
  return latestlogin_.Mutable(index);
}
inline ::db::LoginRecored* PlayerLoginHistory::add_latestlogin() {
  // @@protoc_insertion_point(field_add:db.PlayerLoginHistory.latestLogin)
  return latestlogin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::LoginRecored >&
PlayerLoginHistory::latestlogin() const {
  // @@protoc_insertion_point(field_list:db.PlayerLoginHistory.latestLogin)
  return latestlogin_;
}
inline ::google::protobuf::RepeatedPtrField< ::db::LoginRecored >*
PlayerLoginHistory::mutable_latestlogin() {
  // @@protoc_insertion_point(field_mutable_list:db.PlayerLoginHistory.latestLogin)
  return &latestlogin_;
}

// -------------------------------------------------------------------

// LoginHistory__PrimaryKey

// optional uint32 gid = 1;
inline bool LoginHistory__PrimaryKey::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginHistory__PrimaryKey::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginHistory__PrimaryKey::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginHistory__PrimaryKey::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 LoginHistory__PrimaryKey::gid() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory._PrimaryKey.gid)
  return gid_;
}
inline void LoginHistory__PrimaryKey::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:db.LoginHistory._PrimaryKey.gid)
}

// -------------------------------------------------------------------

// LoginHistory__MaxLength

// optional uint32 openid = 1 [default = 32];
inline bool LoginHistory__MaxLength::has_openid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginHistory__MaxLength::set_has_openid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginHistory__MaxLength::clear_has_openid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginHistory__MaxLength::clear_openid() {
  openid_ = 32u;
  clear_has_openid();
}
inline ::google::protobuf::uint32 LoginHistory__MaxLength::openid() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory._MaxLength.openid)
  return openid_;
}
inline void LoginHistory__MaxLength::set_openid(::google::protobuf::uint32 value) {
  set_has_openid();
  openid_ = value;
  // @@protoc_insertion_point(field_set:db.LoginHistory._MaxLength.openid)
}

// -------------------------------------------------------------------

// LoginHistory__Index

// optional string gid = 1;
inline bool LoginHistory__Index::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginHistory__Index::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginHistory__Index::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginHistory__Index::clear_gid() {
  if (gid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gid_->clear();
  }
  clear_has_gid();
}
inline const ::std::string& LoginHistory__Index::gid() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory._Index.gid)
  return *gid_;
}
inline void LoginHistory__Index::set_gid(const ::std::string& value) {
  set_has_gid();
  if (gid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gid_ = new ::std::string;
  }
  gid_->assign(value);
  // @@protoc_insertion_point(field_set:db.LoginHistory._Index.gid)
}
inline void LoginHistory__Index::set_gid(const char* value) {
  set_has_gid();
  if (gid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gid_ = new ::std::string;
  }
  gid_->assign(value);
  // @@protoc_insertion_point(field_set_char:db.LoginHistory._Index.gid)
}
inline void LoginHistory__Index::set_gid(const char* value, size_t size) {
  set_has_gid();
  if (gid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gid_ = new ::std::string;
  }
  gid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:db.LoginHistory._Index.gid)
}
inline ::std::string* LoginHistory__Index::mutable_gid() {
  set_has_gid();
  if (gid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:db.LoginHistory._Index.gid)
  return gid_;
}
inline ::std::string* LoginHistory__Index::release_gid() {
  clear_has_gid();
  if (gid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gid_;
    gid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginHistory__Index::set_allocated_gid(::std::string* gid) {
  if (gid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gid_;
  }
  if (gid) {
    set_has_gid();
    gid_ = gid;
  } else {
    clear_has_gid();
    gid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:db.LoginHistory._Index.gid)
}

// optional string openid = 2;
inline bool LoginHistory__Index::has_openid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginHistory__Index::set_has_openid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginHistory__Index::clear_has_openid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginHistory__Index::clear_openid() {
  if (openid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_->clear();
  }
  clear_has_openid();
}
inline const ::std::string& LoginHistory__Index::openid() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory._Index.openid)
  return *openid_;
}
inline void LoginHistory__Index::set_openid(const ::std::string& value) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
  // @@protoc_insertion_point(field_set:db.LoginHistory._Index.openid)
}
inline void LoginHistory__Index::set_openid(const char* value) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
  // @@protoc_insertion_point(field_set_char:db.LoginHistory._Index.openid)
}
inline void LoginHistory__Index::set_openid(const char* value, size_t size) {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  openid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:db.LoginHistory._Index.openid)
}
inline ::std::string* LoginHistory__Index::mutable_openid() {
  set_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    openid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:db.LoginHistory._Index.openid)
  return openid_;
}
inline ::std::string* LoginHistory__Index::release_openid() {
  clear_has_openid();
  if (openid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = openid_;
    openid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginHistory__Index::set_allocated_openid(::std::string* openid) {
  if (openid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete openid_;
  }
  if (openid) {
    set_has_openid();
    openid_ = openid;
  } else {
    clear_has_openid();
    openid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:db.LoginHistory._Index.openid)
}

// -------------------------------------------------------------------

// LoginHistory

// required uint64 gid = 1;
inline bool LoginHistory::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginHistory::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginHistory::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginHistory::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::uint64 LoginHistory::gid() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory.gid)
  return gid_;
}
inline void LoginHistory::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:db.LoginHistory.gid)
}

// required uint32 area = 2;
inline bool LoginHistory::has_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginHistory::set_has_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginHistory::clear_has_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginHistory::clear_area() {
  area_ = 0u;
  clear_has_area();
}
inline ::google::protobuf::uint32 LoginHistory::area() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory.area)
  return area_;
}
inline void LoginHistory::set_area(::google::protobuf::uint32 value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:db.LoginHistory.area)
}

// optional .db.PlayerLoginHistory history = 3;
inline bool LoginHistory::has_history() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginHistory::set_has_history() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginHistory::clear_has_history() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginHistory::clear_history() {
  if (history_ != NULL) history_->::db::PlayerLoginHistory::Clear();
  clear_has_history();
}
inline const ::db::PlayerLoginHistory& LoginHistory::history() const {
  // @@protoc_insertion_point(field_get:db.LoginHistory.history)
  return history_ != NULL ? *history_ : *default_instance_->history_;
}
inline ::db::PlayerLoginHistory* LoginHistory::mutable_history() {
  set_has_history();
  if (history_ == NULL) history_ = new ::db::PlayerLoginHistory;
  // @@protoc_insertion_point(field_mutable:db.LoginHistory.history)
  return history_;
}
inline ::db::PlayerLoginHistory* LoginHistory::release_history() {
  clear_has_history();
  ::db::PlayerLoginHistory* temp = history_;
  history_ = NULL;
  return temp;
}
inline void LoginHistory::set_allocated_history(::db::PlayerLoginHistory* history) {
  delete history_;
  history_ = history;
  if (history) {
    set_has_history();
  } else {
    clear_has_history();
  }
  // @@protoc_insertion_point(field_set_allocated:db.LoginHistory.history)
}

// -------------------------------------------------------------------

// LoginLatest__PrimaryKey

// optional uint32 gid = 1;
inline bool LoginLatest__PrimaryKey::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginLatest__PrimaryKey::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginLatest__PrimaryKey::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginLatest__PrimaryKey::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 LoginLatest__PrimaryKey::gid() const {
  // @@protoc_insertion_point(field_get:db.LoginLatest._PrimaryKey.gid)
  return gid_;
}
inline void LoginLatest__PrimaryKey::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:db.LoginLatest._PrimaryKey.gid)
}

// -------------------------------------------------------------------

// LoginLatest

// required uint64 gid = 1;
inline bool LoginLatest::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginLatest::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginLatest::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginLatest::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::uint64 LoginLatest::gid() const {
  // @@protoc_insertion_point(field_get:db.LoginLatest.gid)
  return gid_;
}
inline void LoginLatest::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:db.LoginLatest.gid)
}

// required uint32 area = 2;
inline bool LoginLatest::has_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginLatest::set_has_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginLatest::clear_has_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginLatest::clear_area() {
  area_ = 0u;
  clear_has_area();
}
inline ::google::protobuf::uint32 LoginLatest::area() const {
  // @@protoc_insertion_point(field_get:db.LoginLatest.area)
  return area_;
}
inline void LoginLatest::set_area(::google::protobuf::uint32 value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:db.LoginLatest.area)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_2fLoginHistory_2eproto__INCLUDED
