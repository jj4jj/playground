// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db/Role.proto

#ifndef PROTOBUF_db_2fRole_2eproto__INCLUDED
#define PROTOBUF_db_2fRole_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace db {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_2fRole_2eproto();
void protobuf_AssignDesc_db_2fRole_2eproto();
void protobuf_ShutdownFile_db_2fRole_2eproto();

class RoleBase;
class RoleHeroAttr;
class HeroArm;
class RoleHeroArm;
class HeroSkill;
class RoleHeroSkill;
class RoleHeroGrowth;
class RoleHero;
class HeroStrategy;
class RoleHeroInfo;
class RolePackGrid;
class RolePackage;
class RoleGrowth;
class RoleStage;
class RoleSNS;
class RoleActInfo;
class RoleExt;
class Role;
class Role__PrimaryKey;
class Role__MaxLength;

enum RoleBase_Gender {
  RoleBase_Gender_MALE = 0,
  RoleBase_Gender_FEMALE = 1
};
bool RoleBase_Gender_IsValid(int value);
const RoleBase_Gender RoleBase_Gender_Gender_MIN = RoleBase_Gender_MALE;
const RoleBase_Gender RoleBase_Gender_Gender_MAX = RoleBase_Gender_FEMALE;
const int RoleBase_Gender_Gender_ARRAYSIZE = RoleBase_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleBase_Gender_descriptor();
inline const ::std::string& RoleBase_Gender_Name(RoleBase_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleBase_Gender_descriptor(), value);
}
inline bool RoleBase_Gender_Parse(
    const ::std::string& name, RoleBase_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleBase_Gender>(
    RoleBase_Gender_descriptor(), name, value);
}
// ===================================================================

class RoleBase : public ::google::protobuf::Message {
 public:
  RoleBase();
  virtual ~RoleBase();

  RoleBase(const RoleBase& from);

  inline RoleBase& operator=(const RoleBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBase& default_instance();

  void Swap(RoleBase* other);

  // implements Message ----------------------------------------------

  RoleBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleBase& from);
  void MergeFrom(const RoleBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RoleBase_Gender Gender;
  static const Gender MALE = RoleBase_Gender_MALE;
  static const Gender FEMALE = RoleBase_Gender_FEMALE;
  static inline bool Gender_IsValid(int value) {
    return RoleBase_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    RoleBase_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    RoleBase_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    RoleBase_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return RoleBase_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return RoleBase_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return RoleBase_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .db.RoleBase.Gender gendor = 1 [default = MALE];
  inline bool has_gendor() const;
  inline void clear_gendor();
  static const int kGendorFieldNumber = 1;
  inline ::db::RoleBase_Gender gendor() const;
  inline void set_gendor(::db::RoleBase_Gender value);

  // required uint32 gold = 2 [default = 0];
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 diamonds = 3 [default = 0];
  inline bool has_diamonds() const;
  inline void clear_diamonds();
  static const int kDiamondsFieldNumber = 3;
  inline ::google::protobuf::uint32 diamonds() const;
  inline void set_diamonds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleBase)
 private:
  inline void set_has_gendor();
  inline void clear_has_gendor();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_diamonds();
  inline void clear_has_diamonds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int gendor_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 diamonds_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleBase* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroAttr : public ::google::protobuf::Message {
 public:
  RoleHeroAttr();
  virtual ~RoleHeroAttr();

  RoleHeroAttr(const RoleHeroAttr& from);

  inline RoleHeroAttr& operator=(const RoleHeroAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroAttr& default_instance();

  void Swap(RoleHeroAttr* other);

  // implements Message ----------------------------------------------

  RoleHeroAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroAttr& from);
  void MergeFrom(const RoleHeroAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 attrs = 1;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 1;
  inline ::google::protobuf::int32 attrs(int index) const;
  inline void set_attrs(int index, ::google::protobuf::int32 value);
  inline void add_attrs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attrs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:db.RoleHeroAttr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attrs_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroAttr* default_instance_;
};
// -------------------------------------------------------------------

class HeroArm : public ::google::protobuf::Message {
 public:
  HeroArm();
  virtual ~HeroArm();

  HeroArm(const HeroArm& from);

  inline HeroArm& operator=(const HeroArm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroArm& default_instance();

  void Swap(HeroArm* other);

  // implements Message ----------------------------------------------

  HeroArm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroArm& from);
  void MergeFrom(const HeroArm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional uint32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.HeroArm)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static HeroArm* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroArm : public ::google::protobuf::Message {
 public:
  RoleHeroArm();
  virtual ~RoleHeroArm();

  RoleHeroArm(const RoleHeroArm& from);

  inline RoleHeroArm& operator=(const RoleHeroArm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroArm& default_instance();

  void Swap(RoleHeroArm* other);

  // implements Message ----------------------------------------------

  RoleHeroArm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroArm& from);
  void MergeFrom(const RoleHeroArm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.HeroArm grids = 1;
  inline int grids_size() const;
  inline void clear_grids();
  static const int kGridsFieldNumber = 1;
  inline const ::db::HeroArm& grids(int index) const;
  inline ::db::HeroArm* mutable_grids(int index);
  inline ::db::HeroArm* add_grids();
  inline const ::google::protobuf::RepeatedPtrField< ::db::HeroArm >&
      grids() const;
  inline ::google::protobuf::RepeatedPtrField< ::db::HeroArm >*
      mutable_grids();

  // @@protoc_insertion_point(class_scope:db.RoleHeroArm)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::HeroArm > grids_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroArm* default_instance_;
};
// -------------------------------------------------------------------

class HeroSkill : public ::google::protobuf::Message {
 public:
  HeroSkill();
  virtual ~HeroSkill();

  HeroSkill(const HeroSkill& from);

  inline HeroSkill& operator=(const HeroSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroSkill& default_instance();

  void Swap(HeroSkill* other);

  // implements Message ----------------------------------------------

  HeroSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroSkill& from);
  void MergeFrom(const HeroSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.HeroSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 lv_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static HeroSkill* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroSkill : public ::google::protobuf::Message {
 public:
  RoleHeroSkill();
  virtual ~RoleHeroSkill();

  RoleHeroSkill(const RoleHeroSkill& from);

  inline RoleHeroSkill& operator=(const RoleHeroSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroSkill& default_instance();

  void Swap(RoleHeroSkill* other);

  // implements Message ----------------------------------------------

  RoleHeroSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroSkill& from);
  void MergeFrom(const RoleHeroSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.HeroSkill skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::db::HeroSkill& skills(int index) const;
  inline ::db::HeroSkill* mutable_skills(int index);
  inline ::db::HeroSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::db::HeroSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::db::HeroSkill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:db.RoleHeroSkill)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::HeroSkill > skills_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroSkill* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroGrowth : public ::google::protobuf::Message {
 public:
  RoleHeroGrowth();
  virtual ~RoleHeroGrowth();

  RoleHeroGrowth(const RoleHeroGrowth& from);

  inline RoleHeroGrowth& operator=(const RoleHeroGrowth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroGrowth& default_instance();

  void Swap(RoleHeroGrowth* other);

  // implements Message ----------------------------------------------

  RoleHeroGrowth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroGrowth& from);
  void MergeFrom(const RoleHeroGrowth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleHeroGrowth)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroGrowth* default_instance_;
};
// -------------------------------------------------------------------

class RoleHero : public ::google::protobuf::Message {
 public:
  RoleHero();
  virtual ~RoleHero();

  RoleHero(const RoleHero& from);

  inline RoleHero& operator=(const RoleHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHero& default_instance();

  void Swap(RoleHero* other);

  // implements Message ----------------------------------------------

  RoleHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHero& from);
  void MergeFrom(const RoleHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .db.RoleHeroGrowth growth = 2;
  inline bool has_growth() const;
  inline void clear_growth();
  static const int kGrowthFieldNumber = 2;
  inline const ::db::RoleHeroGrowth& growth() const;
  inline ::db::RoleHeroGrowth* mutable_growth();
  inline ::db::RoleHeroGrowth* release_growth();
  inline void set_allocated_growth(::db::RoleHeroGrowth* growth);

  // required .db.RoleHeroAttr attr = 3;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 3;
  inline const ::db::RoleHeroAttr& attr() const;
  inline ::db::RoleHeroAttr* mutable_attr();
  inline ::db::RoleHeroAttr* release_attr();
  inline void set_allocated_attr(::db::RoleHeroAttr* attr);

  // required .db.RoleHeroArm arm = 4;
  inline bool has_arm() const;
  inline void clear_arm();
  static const int kArmFieldNumber = 4;
  inline const ::db::RoleHeroArm& arm() const;
  inline ::db::RoleHeroArm* mutable_arm();
  inline ::db::RoleHeroArm* release_arm();
  inline void set_allocated_arm(::db::RoleHeroArm* arm);

  // required .db.RoleHeroSkill skill = 5;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 5;
  inline const ::db::RoleHeroSkill& skill() const;
  inline ::db::RoleHeroSkill* mutable_skill();
  inline ::db::RoleHeroSkill* release_skill();
  inline void set_allocated_skill(::db::RoleHeroSkill* skill);

  // @@protoc_insertion_point(class_scope:db.RoleHero)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_growth();
  inline void clear_has_growth();
  inline void set_has_attr();
  inline void clear_has_attr();
  inline void set_has_arm();
  inline void clear_has_arm();
  inline void set_has_skill();
  inline void clear_has_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::db::RoleHeroGrowth* growth_;
  ::db::RoleHeroAttr* attr_;
  ::db::RoleHeroArm* arm_;
  ::db::RoleHeroSkill* skill_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHero* default_instance_;
};
// -------------------------------------------------------------------

class HeroStrategy : public ::google::protobuf::Message {
 public:
  HeroStrategy();
  virtual ~HeroStrategy();

  HeroStrategy(const HeroStrategy& from);

  inline HeroStrategy& operator=(const HeroStrategy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroStrategy& default_instance();

  void Swap(HeroStrategy* other);

  // implements Message ----------------------------------------------

  HeroStrategy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroStrategy& from);
  void MergeFrom(const HeroStrategy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 joinWarHeroIDs = 1;
  inline int joinwarheroids_size() const;
  inline void clear_joinwarheroids();
  static const int kJoinWarHeroIDsFieldNumber = 1;
  inline ::google::protobuf::uint32 joinwarheroids(int index) const;
  inline void set_joinwarheroids(int index, ::google::protobuf::uint32 value);
  inline void add_joinwarheroids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      joinwarheroids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_joinwarheroids();

  // @@protoc_insertion_point(class_scope:db.HeroStrategy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > joinwarheroids_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static HeroStrategy* default_instance_;
};
// -------------------------------------------------------------------

class RoleHeroInfo : public ::google::protobuf::Message {
 public:
  RoleHeroInfo();
  virtual ~RoleHeroInfo();

  RoleHeroInfo(const RoleHeroInfo& from);

  inline RoleHeroInfo& operator=(const RoleHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleHeroInfo& default_instance();

  void Swap(RoleHeroInfo* other);

  // implements Message ----------------------------------------------

  RoleHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleHeroInfo& from);
  void MergeFrom(const RoleHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.RoleHero heros = 1;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 1;
  inline const ::db::RoleHero& heros(int index) const;
  inline ::db::RoleHero* mutable_heros(int index);
  inline ::db::RoleHero* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::db::RoleHero >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::db::RoleHero >*
      mutable_heros();

  // required .db.HeroStrategy strategy = 2;
  inline bool has_strategy() const;
  inline void clear_strategy();
  static const int kStrategyFieldNumber = 2;
  inline const ::db::HeroStrategy& strategy() const;
  inline ::db::HeroStrategy* mutable_strategy();
  inline ::db::HeroStrategy* release_strategy();
  inline void set_allocated_strategy(::db::HeroStrategy* strategy);

  // @@protoc_insertion_point(class_scope:db.RoleHeroInfo)
 private:
  inline void set_has_strategy();
  inline void clear_has_strategy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::RoleHero > heros_;
  ::db::HeroStrategy* strategy_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class RolePackGrid : public ::google::protobuf::Message {
 public:
  RolePackGrid();
  virtual ~RolePackGrid();

  RolePackGrid(const RolePackGrid& from);

  inline RolePackGrid& operator=(const RolePackGrid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RolePackGrid& default_instance();

  void Swap(RolePackGrid* other);

  // implements Message ----------------------------------------------

  RolePackGrid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RolePackGrid& from);
  void MergeFrom(const RolePackGrid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 3 [default = 0];
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RolePackGrid)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RolePackGrid* default_instance_;
};
// -------------------------------------------------------------------

class RolePackage : public ::google::protobuf::Message {
 public:
  RolePackage();
  virtual ~RolePackage();

  RolePackage(const RolePackage& from);

  inline RolePackage& operator=(const RolePackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RolePackage& default_instance();

  void Swap(RolePackage* other);

  // implements Message ----------------------------------------------

  RolePackage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RolePackage& from);
  void MergeFrom(const RolePackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 maxGrid = 1 [default = 0];
  inline bool has_maxgrid() const;
  inline void clear_maxgrid();
  static const int kMaxGridFieldNumber = 1;
  inline ::google::protobuf::uint32 maxgrid() const;
  inline void set_maxgrid(::google::protobuf::uint32 value);

  // repeated .db.RolePackGrid grids = 2;
  inline int grids_size() const;
  inline void clear_grids();
  static const int kGridsFieldNumber = 2;
  inline const ::db::RolePackGrid& grids(int index) const;
  inline ::db::RolePackGrid* mutable_grids(int index);
  inline ::db::RolePackGrid* add_grids();
  inline const ::google::protobuf::RepeatedPtrField< ::db::RolePackGrid >&
      grids() const;
  inline ::google::protobuf::RepeatedPtrField< ::db::RolePackGrid >*
      mutable_grids();

  // @@protoc_insertion_point(class_scope:db.RolePackage)
 private:
  inline void set_has_maxgrid();
  inline void clear_has_maxgrid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::RolePackGrid > grids_;
  ::google::protobuf::uint32 maxgrid_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RolePackage* default_instance_;
};
// -------------------------------------------------------------------

class RoleGrowth : public ::google::protobuf::Message {
 public:
  RoleGrowth();
  virtual ~RoleGrowth();

  RoleGrowth(const RoleGrowth& from);

  inline RoleGrowth& operator=(const RoleGrowth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleGrowth& default_instance();

  void Swap(RoleGrowth* other);

  // implements Message ----------------------------------------------

  RoleGrowth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleGrowth& from);
  void MergeFrom(const RoleGrowth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 2 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleGrowth)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleGrowth* default_instance_;
};
// -------------------------------------------------------------------

class RoleStage : public ::google::protobuf::Message {
 public:
  RoleStage();
  virtual ~RoleStage();

  RoleStage(const RoleStage& from);

  inline RoleStage& operator=(const RoleStage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleStage& default_instance();

  void Swap(RoleStage* other);

  // implements Message ----------------------------------------------

  RoleStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleStage& from);
  void MergeFrom(const RoleStage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 curStage = 1 [default = 0];
  inline bool has_curstage() const;
  inline void clear_curstage();
  static const int kCurStageFieldNumber = 1;
  inline ::google::protobuf::uint32 curstage() const;
  inline void set_curstage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleStage)
 private:
  inline void set_has_curstage();
  inline void clear_has_curstage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 curstage_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleStage* default_instance_;
};
// -------------------------------------------------------------------

class RoleSNS : public ::google::protobuf::Message {
 public:
  RoleSNS();
  virtual ~RoleSNS();

  RoleSNS(const RoleSNS& from);

  inline RoleSNS& operator=(const RoleSNS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSNS& default_instance();

  void Swap(RoleSNS* other);

  // implements Message ----------------------------------------------

  RoleSNS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSNS& from);
  void MergeFrom(const RoleSNS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 maxfrinds = 1 [default = 5];
  inline bool has_maxfrinds() const;
  inline void clear_maxfrinds();
  static const int kMaxfrindsFieldNumber = 1;
  inline ::google::protobuf::uint32 maxfrinds() const;
  inline void set_maxfrinds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleSNS)
 private:
  inline void set_has_maxfrinds();
  inline void clear_has_maxfrinds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 maxfrinds_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleSNS* default_instance_;
};
// -------------------------------------------------------------------

class RoleActInfo : public ::google::protobuf::Message {
 public:
  RoleActInfo();
  virtual ~RoleActInfo();

  RoleActInfo(const RoleActInfo& from);

  inline RoleActInfo& operator=(const RoleActInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleActInfo& default_instance();

  void Swap(RoleActInfo* other);

  // implements Message ----------------------------------------------

  RoleActInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleActInfo& from);
  void MergeFrom(const RoleActInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::uint32 dummy() const;
  inline void set_dummy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleActInfo)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dummy_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleActInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleExt : public ::google::protobuf::Message {
 public:
  RoleExt();
  virtual ~RoleExt();

  RoleExt(const RoleExt& from);

  inline RoleExt& operator=(const RoleExt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleExt& default_instance();

  void Swap(RoleExt* other);

  // implements Message ----------------------------------------------

  RoleExt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleExt& from);
  void MergeFrom(const RoleExt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::uint32 dummy() const;
  inline void set_dummy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.RoleExt)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dummy_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static RoleExt* default_instance_;
};
// -------------------------------------------------------------------

class Role__PrimaryKey : public ::google::protobuf::Message {
 public:
  Role__PrimaryKey();
  virtual ~Role__PrimaryKey();

  Role__PrimaryKey(const Role__PrimaryKey& from);

  inline Role__PrimaryKey& operator=(const Role__PrimaryKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role__PrimaryKey& default_instance();

  void Swap(Role__PrimaryKey* other);

  // implements Message ----------------------------------------------

  Role__PrimaryKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role__PrimaryKey& from);
  void MergeFrom(const Role__PrimaryKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rid = 1;
  inline bool has_rid() const;
  inline void clear_rid();
  static const int kRidFieldNumber = 1;
  inline ::google::protobuf::uint32 rid() const;
  inline void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.Role._PrimaryKey)
 private:
  inline void set_has_rid();
  inline void clear_has_rid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static Role__PrimaryKey* default_instance_;
};
// -------------------------------------------------------------------

class Role__MaxLength : public ::google::protobuf::Message {
 public:
  Role__MaxLength();
  virtual ~Role__MaxLength();

  Role__MaxLength(const Role__MaxLength& from);

  inline Role__MaxLength& operator=(const Role__MaxLength& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role__MaxLength& default_instance();

  void Swap(Role__MaxLength* other);

  // implements Message ----------------------------------------------

  Role__MaxLength* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role__MaxLength& from);
  void MergeFrom(const Role__MaxLength& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 name = 1 [default = 32];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db.Role._MaxLength)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 name_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static Role__MaxLength* default_instance_;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  Role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Role__PrimaryKey _PrimaryKey;
  typedef Role__MaxLength _MaxLength;

  // accessors -------------------------------------------------------

  // required uint64 rid = 1;
  inline bool has_rid() const;
  inline void clear_rid();
  static const int kRidFieldNumber = 1;
  inline ::google::protobuf::uint64 rid() const;
  inline void set_rid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .db.RoleBase base = 3;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 3;
  inline const ::db::RoleBase& base() const;
  inline ::db::RoleBase* mutable_base();
  inline ::db::RoleBase* release_base();
  inline void set_allocated_base(::db::RoleBase* base);

  // required .db.RoleHeroInfo hero = 4;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 4;
  inline const ::db::RoleHeroInfo& hero() const;
  inline ::db::RoleHeroInfo* mutable_hero();
  inline ::db::RoleHeroInfo* release_hero();
  inline void set_allocated_hero(::db::RoleHeroInfo* hero);

  // required .db.RolePackage pack = 5;
  inline bool has_pack() const;
  inline void clear_pack();
  static const int kPackFieldNumber = 5;
  inline const ::db::RolePackage& pack() const;
  inline ::db::RolePackage* mutable_pack();
  inline ::db::RolePackage* release_pack();
  inline void set_allocated_pack(::db::RolePackage* pack);

  // required .db.RoleGrowth grow = 6;
  inline bool has_grow() const;
  inline void clear_grow();
  static const int kGrowFieldNumber = 6;
  inline const ::db::RoleGrowth& grow() const;
  inline ::db::RoleGrowth* mutable_grow();
  inline ::db::RoleGrowth* release_grow();
  inline void set_allocated_grow(::db::RoleGrowth* grow);

  // required .db.RoleStage stage = 7;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 7;
  inline const ::db::RoleStage& stage() const;
  inline ::db::RoleStage* mutable_stage();
  inline ::db::RoleStage* release_stage();
  inline void set_allocated_stage(::db::RoleStage* stage);

  // required .db.RoleSNS sns = 8;
  inline bool has_sns() const;
  inline void clear_sns();
  static const int kSnsFieldNumber = 8;
  inline const ::db::RoleSNS& sns() const;
  inline ::db::RoleSNS* mutable_sns();
  inline ::db::RoleSNS* release_sns();
  inline void set_allocated_sns(::db::RoleSNS* sns);

  // required .db.RoleActInfo act = 9;
  inline bool has_act() const;
  inline void clear_act();
  static const int kActFieldNumber = 9;
  inline const ::db::RoleActInfo& act() const;
  inline ::db::RoleActInfo* mutable_act();
  inline ::db::RoleActInfo* release_act();
  inline void set_allocated_act(::db::RoleActInfo* act);

  // required .db.RoleExt ext = 10;
  inline bool has_ext() const;
  inline void clear_ext();
  static const int kExtFieldNumber = 10;
  inline const ::db::RoleExt& ext() const;
  inline ::db::RoleExt* mutable_ext();
  inline ::db::RoleExt* release_ext();
  inline void set_allocated_ext(::db::RoleExt* ext);

  // @@protoc_insertion_point(class_scope:db.Role)
 private:
  inline void set_has_rid();
  inline void clear_has_rid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_hero();
  inline void clear_has_hero();
  inline void set_has_pack();
  inline void clear_has_pack();
  inline void set_has_grow();
  inline void clear_has_grow();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_sns();
  inline void clear_has_sns();
  inline void set_has_act();
  inline void clear_has_act();
  inline void set_has_ext();
  inline void clear_has_ext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 rid_;
  ::std::string* name_;
  ::db::RoleBase* base_;
  ::db::RoleHeroInfo* hero_;
  ::db::RolePackage* pack_;
  ::db::RoleGrowth* grow_;
  ::db::RoleStage* stage_;
  ::db::RoleSNS* sns_;
  ::db::RoleActInfo* act_;
  ::db::RoleExt* ext_;
  friend void  protobuf_AddDesc_db_2fRole_2eproto();
  friend void protobuf_AssignDesc_db_2fRole_2eproto();
  friend void protobuf_ShutdownFile_db_2fRole_2eproto();

  void InitAsDefaultInstance();
  static Role* default_instance_;
};
// ===================================================================


// ===================================================================

// RoleBase

// required .db.RoleBase.Gender gendor = 1 [default = MALE];
inline bool RoleBase::has_gendor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleBase::set_has_gendor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleBase::clear_has_gendor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleBase::clear_gendor() {
  gendor_ = 0;
  clear_has_gendor();
}
inline ::db::RoleBase_Gender RoleBase::gendor() const {
  // @@protoc_insertion_point(field_get:db.RoleBase.gendor)
  return static_cast< ::db::RoleBase_Gender >(gendor_);
}
inline void RoleBase::set_gendor(::db::RoleBase_Gender value) {
  assert(::db::RoleBase_Gender_IsValid(value));
  set_has_gendor();
  gendor_ = value;
  // @@protoc_insertion_point(field_set:db.RoleBase.gendor)
}

// required uint32 gold = 2 [default = 0];
inline bool RoleBase::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleBase::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleBase::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleBase::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 RoleBase::gold() const {
  // @@protoc_insertion_point(field_get:db.RoleBase.gold)
  return gold_;
}
inline void RoleBase::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:db.RoleBase.gold)
}

// required uint32 diamonds = 3 [default = 0];
inline bool RoleBase::has_diamonds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleBase::set_has_diamonds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleBase::clear_has_diamonds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleBase::clear_diamonds() {
  diamonds_ = 0u;
  clear_has_diamonds();
}
inline ::google::protobuf::uint32 RoleBase::diamonds() const {
  // @@protoc_insertion_point(field_get:db.RoleBase.diamonds)
  return diamonds_;
}
inline void RoleBase::set_diamonds(::google::protobuf::uint32 value) {
  set_has_diamonds();
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:db.RoleBase.diamonds)
}

// -------------------------------------------------------------------

// RoleHeroAttr

// repeated int32 attrs = 1;
inline int RoleHeroAttr::attrs_size() const {
  return attrs_.size();
}
inline void RoleHeroAttr::clear_attrs() {
  attrs_.Clear();
}
inline ::google::protobuf::int32 RoleHeroAttr::attrs(int index) const {
  // @@protoc_insertion_point(field_get:db.RoleHeroAttr.attrs)
  return attrs_.Get(index);
}
inline void RoleHeroAttr::set_attrs(int index, ::google::protobuf::int32 value) {
  attrs_.Set(index, value);
  // @@protoc_insertion_point(field_set:db.RoleHeroAttr.attrs)
}
inline void RoleHeroAttr::add_attrs(::google::protobuf::int32 value) {
  attrs_.Add(value);
  // @@protoc_insertion_point(field_add:db.RoleHeroAttr.attrs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleHeroAttr::attrs() const {
  // @@protoc_insertion_point(field_list:db.RoleHeroAttr.attrs)
  return attrs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleHeroAttr::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:db.RoleHeroAttr.attrs)
  return &attrs_;
}

// -------------------------------------------------------------------

// HeroArm

// optional uint32 id = 1;
inline bool HeroArm::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroArm::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroArm::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroArm::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroArm::id() const {
  // @@protoc_insertion_point(field_get:db.HeroArm.id)
  return id_;
}
inline void HeroArm::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.HeroArm.id)
}

// optional uint32 lv = 2;
inline bool HeroArm::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroArm::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroArm::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroArm::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 HeroArm::lv() const {
  // @@protoc_insertion_point(field_get:db.HeroArm.lv)
  return lv_;
}
inline void HeroArm::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:db.HeroArm.lv)
}

// optional uint32 pos = 3;
inline bool HeroArm::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroArm::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroArm::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroArm::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 HeroArm::pos() const {
  // @@protoc_insertion_point(field_get:db.HeroArm.pos)
  return pos_;
}
inline void HeroArm::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:db.HeroArm.pos)
}

// -------------------------------------------------------------------

// RoleHeroArm

// repeated .db.HeroArm grids = 1;
inline int RoleHeroArm::grids_size() const {
  return grids_.size();
}
inline void RoleHeroArm::clear_grids() {
  grids_.Clear();
}
inline const ::db::HeroArm& RoleHeroArm::grids(int index) const {
  // @@protoc_insertion_point(field_get:db.RoleHeroArm.grids)
  return grids_.Get(index);
}
inline ::db::HeroArm* RoleHeroArm::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:db.RoleHeroArm.grids)
  return grids_.Mutable(index);
}
inline ::db::HeroArm* RoleHeroArm::add_grids() {
  // @@protoc_insertion_point(field_add:db.RoleHeroArm.grids)
  return grids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::HeroArm >&
RoleHeroArm::grids() const {
  // @@protoc_insertion_point(field_list:db.RoleHeroArm.grids)
  return grids_;
}
inline ::google::protobuf::RepeatedPtrField< ::db::HeroArm >*
RoleHeroArm::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:db.RoleHeroArm.grids)
  return &grids_;
}

// -------------------------------------------------------------------

// HeroSkill

// optional uint32 id = 1;
inline bool HeroSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroSkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroSkill::id() const {
  // @@protoc_insertion_point(field_get:db.HeroSkill.id)
  return id_;
}
inline void HeroSkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.HeroSkill.id)
}

// optional uint32 lv = 2;
inline bool HeroSkill::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroSkill::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroSkill::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroSkill::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 HeroSkill::lv() const {
  // @@protoc_insertion_point(field_get:db.HeroSkill.lv)
  return lv_;
}
inline void HeroSkill::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:db.HeroSkill.lv)
}

// -------------------------------------------------------------------

// RoleHeroSkill

// repeated .db.HeroSkill skills = 1;
inline int RoleHeroSkill::skills_size() const {
  return skills_.size();
}
inline void RoleHeroSkill::clear_skills() {
  skills_.Clear();
}
inline const ::db::HeroSkill& RoleHeroSkill::skills(int index) const {
  // @@protoc_insertion_point(field_get:db.RoleHeroSkill.skills)
  return skills_.Get(index);
}
inline ::db::HeroSkill* RoleHeroSkill::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:db.RoleHeroSkill.skills)
  return skills_.Mutable(index);
}
inline ::db::HeroSkill* RoleHeroSkill::add_skills() {
  // @@protoc_insertion_point(field_add:db.RoleHeroSkill.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::HeroSkill >&
RoleHeroSkill::skills() const {
  // @@protoc_insertion_point(field_list:db.RoleHeroSkill.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::db::HeroSkill >*
RoleHeroSkill::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:db.RoleHeroSkill.skills)
  return &skills_;
}

// -------------------------------------------------------------------

// RoleHeroGrowth

// optional uint32 level = 1;
inline bool RoleHeroGrowth::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleHeroGrowth::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleHeroGrowth::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleHeroGrowth::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleHeroGrowth::level() const {
  // @@protoc_insertion_point(field_get:db.RoleHeroGrowth.level)
  return level_;
}
inline void RoleHeroGrowth::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.RoleHeroGrowth.level)
}

// optional uint32 exp = 2;
inline bool RoleHeroGrowth::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleHeroGrowth::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleHeroGrowth::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleHeroGrowth::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 RoleHeroGrowth::exp() const {
  // @@protoc_insertion_point(field_get:db.RoleHeroGrowth.exp)
  return exp_;
}
inline void RoleHeroGrowth::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:db.RoleHeroGrowth.exp)
}

// -------------------------------------------------------------------

// RoleHero

// required uint32 id = 1 [default = 0];
inline bool RoleHero::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleHero::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleHero::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleHero::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoleHero::id() const {
  // @@protoc_insertion_point(field_get:db.RoleHero.id)
  return id_;
}
inline void RoleHero::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.RoleHero.id)
}

// required .db.RoleHeroGrowth growth = 2;
inline bool RoleHero::has_growth() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleHero::set_has_growth() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleHero::clear_has_growth() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleHero::clear_growth() {
  if (growth_ != NULL) growth_->::db::RoleHeroGrowth::Clear();
  clear_has_growth();
}
inline const ::db::RoleHeroGrowth& RoleHero::growth() const {
  // @@protoc_insertion_point(field_get:db.RoleHero.growth)
  return growth_ != NULL ? *growth_ : *default_instance_->growth_;
}
inline ::db::RoleHeroGrowth* RoleHero::mutable_growth() {
  set_has_growth();
  if (growth_ == NULL) growth_ = new ::db::RoleHeroGrowth;
  // @@protoc_insertion_point(field_mutable:db.RoleHero.growth)
  return growth_;
}
inline ::db::RoleHeroGrowth* RoleHero::release_growth() {
  clear_has_growth();
  ::db::RoleHeroGrowth* temp = growth_;
  growth_ = NULL;
  return temp;
}
inline void RoleHero::set_allocated_growth(::db::RoleHeroGrowth* growth) {
  delete growth_;
  growth_ = growth;
  if (growth) {
    set_has_growth();
  } else {
    clear_has_growth();
  }
  // @@protoc_insertion_point(field_set_allocated:db.RoleHero.growth)
}

// required .db.RoleHeroAttr attr = 3;
inline bool RoleHero::has_attr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleHero::set_has_attr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleHero::clear_has_attr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleHero::clear_attr() {
  if (attr_ != NULL) attr_->::db::RoleHeroAttr::Clear();
  clear_has_attr();
}
inline const ::db::RoleHeroAttr& RoleHero::attr() const {
  // @@protoc_insertion_point(field_get:db.RoleHero.attr)
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::db::RoleHeroAttr* RoleHero::mutable_attr() {
  set_has_attr();
  if (attr_ == NULL) attr_ = new ::db::RoleHeroAttr;
  // @@protoc_insertion_point(field_mutable:db.RoleHero.attr)
  return attr_;
}
inline ::db::RoleHeroAttr* RoleHero::release_attr() {
  clear_has_attr();
  ::db::RoleHeroAttr* temp = attr_;
  attr_ = NULL;
  return temp;
}
inline void RoleHero::set_allocated_attr(::db::RoleHeroAttr* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
  // @@protoc_insertion_point(field_set_allocated:db.RoleHero.attr)
}

// required .db.RoleHeroArm arm = 4;
inline bool RoleHero::has_arm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleHero::set_has_arm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleHero::clear_has_arm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleHero::clear_arm() {
  if (arm_ != NULL) arm_->::db::RoleHeroArm::Clear();
  clear_has_arm();
}
inline const ::db::RoleHeroArm& RoleHero::arm() const {
  // @@protoc_insertion_point(field_get:db.RoleHero.arm)
  return arm_ != NULL ? *arm_ : *default_instance_->arm_;
}
inline ::db::RoleHeroArm* RoleHero::mutable_arm() {
  set_has_arm();
  if (arm_ == NULL) arm_ = new ::db::RoleHeroArm;
  // @@protoc_insertion_point(field_mutable:db.RoleHero.arm)
  return arm_;
}
inline ::db::RoleHeroArm* RoleHero::release_arm() {
  clear_has_arm();
  ::db::RoleHeroArm* temp = arm_;
  arm_ = NULL;
  return temp;
}
inline void RoleHero::set_allocated_arm(::db::RoleHeroArm* arm) {
  delete arm_;
  arm_ = arm;
  if (arm) {
    set_has_arm();
  } else {
    clear_has_arm();
  }
  // @@protoc_insertion_point(field_set_allocated:db.RoleHero.arm)
}

// required .db.RoleHeroSkill skill = 5;
inline bool RoleHero::has_skill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleHero::set_has_skill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleHero::clear_has_skill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleHero::clear_skill() {
  if (skill_ != NULL) skill_->::db::RoleHeroSkill::Clear();
  clear_has_skill();
}
inline const ::db::RoleHeroSkill& RoleHero::skill() const {
  // @@protoc_insertion_point(field_get:db.RoleHero.skill)
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::db::RoleHeroSkill* RoleHero::mutable_skill() {
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::db::RoleHeroSkill;
  // @@protoc_insertion_point(field_mutable:db.RoleHero.skill)
  return skill_;
}
inline ::db::RoleHeroSkill* RoleHero::release_skill() {
  clear_has_skill();
  ::db::RoleHeroSkill* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void RoleHero::set_allocated_skill(::db::RoleHeroSkill* skill) {
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
  // @@protoc_insertion_point(field_set_allocated:db.RoleHero.skill)
}

// -------------------------------------------------------------------

// HeroStrategy

// repeated uint32 joinWarHeroIDs = 1;
inline int HeroStrategy::joinwarheroids_size() const {
  return joinwarheroids_.size();
}
inline void HeroStrategy::clear_joinwarheroids() {
  joinwarheroids_.Clear();
}
inline ::google::protobuf::uint32 HeroStrategy::joinwarheroids(int index) const {
  // @@protoc_insertion_point(field_get:db.HeroStrategy.joinWarHeroIDs)
  return joinwarheroids_.Get(index);
}
inline void HeroStrategy::set_joinwarheroids(int index, ::google::protobuf::uint32 value) {
  joinwarheroids_.Set(index, value);
  // @@protoc_insertion_point(field_set:db.HeroStrategy.joinWarHeroIDs)
}
inline void HeroStrategy::add_joinwarheroids(::google::protobuf::uint32 value) {
  joinwarheroids_.Add(value);
  // @@protoc_insertion_point(field_add:db.HeroStrategy.joinWarHeroIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroStrategy::joinwarheroids() const {
  // @@protoc_insertion_point(field_list:db.HeroStrategy.joinWarHeroIDs)
  return joinwarheroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroStrategy::mutable_joinwarheroids() {
  // @@protoc_insertion_point(field_mutable_list:db.HeroStrategy.joinWarHeroIDs)
  return &joinwarheroids_;
}

// -------------------------------------------------------------------

// RoleHeroInfo

// repeated .db.RoleHero heros = 1;
inline int RoleHeroInfo::heros_size() const {
  return heros_.size();
}
inline void RoleHeroInfo::clear_heros() {
  heros_.Clear();
}
inline const ::db::RoleHero& RoleHeroInfo::heros(int index) const {
  // @@protoc_insertion_point(field_get:db.RoleHeroInfo.heros)
  return heros_.Get(index);
}
inline ::db::RoleHero* RoleHeroInfo::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:db.RoleHeroInfo.heros)
  return heros_.Mutable(index);
}
inline ::db::RoleHero* RoleHeroInfo::add_heros() {
  // @@protoc_insertion_point(field_add:db.RoleHeroInfo.heros)
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::RoleHero >&
RoleHeroInfo::heros() const {
  // @@protoc_insertion_point(field_list:db.RoleHeroInfo.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::db::RoleHero >*
RoleHeroInfo::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:db.RoleHeroInfo.heros)
  return &heros_;
}

// required .db.HeroStrategy strategy = 2;
inline bool RoleHeroInfo::has_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleHeroInfo::set_has_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleHeroInfo::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleHeroInfo::clear_strategy() {
  if (strategy_ != NULL) strategy_->::db::HeroStrategy::Clear();
  clear_has_strategy();
}
inline const ::db::HeroStrategy& RoleHeroInfo::strategy() const {
  // @@protoc_insertion_point(field_get:db.RoleHeroInfo.strategy)
  return strategy_ != NULL ? *strategy_ : *default_instance_->strategy_;
}
inline ::db::HeroStrategy* RoleHeroInfo::mutable_strategy() {
  set_has_strategy();
  if (strategy_ == NULL) strategy_ = new ::db::HeroStrategy;
  // @@protoc_insertion_point(field_mutable:db.RoleHeroInfo.strategy)
  return strategy_;
}
inline ::db::HeroStrategy* RoleHeroInfo::release_strategy() {
  clear_has_strategy();
  ::db::HeroStrategy* temp = strategy_;
  strategy_ = NULL;
  return temp;
}
inline void RoleHeroInfo::set_allocated_strategy(::db::HeroStrategy* strategy) {
  delete strategy_;
  strategy_ = strategy;
  if (strategy) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:db.RoleHeroInfo.strategy)
}

// -------------------------------------------------------------------

// RolePackGrid

// required uint32 pos = 1;
inline bool RolePackGrid::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RolePackGrid::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RolePackGrid::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RolePackGrid::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 RolePackGrid::pos() const {
  // @@protoc_insertion_point(field_get:db.RolePackGrid.pos)
  return pos_;
}
inline void RolePackGrid::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:db.RolePackGrid.pos)
}

// required uint32 id = 2;
inline bool RolePackGrid::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RolePackGrid::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RolePackGrid::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RolePackGrid::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RolePackGrid::id() const {
  // @@protoc_insertion_point(field_get:db.RolePackGrid.id)
  return id_;
}
inline void RolePackGrid::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.RolePackGrid.id)
}

// required uint32 num = 3 [default = 0];
inline bool RolePackGrid::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RolePackGrid::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RolePackGrid::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RolePackGrid::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 RolePackGrid::num() const {
  // @@protoc_insertion_point(field_get:db.RolePackGrid.num)
  return num_;
}
inline void RolePackGrid::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:db.RolePackGrid.num)
}

// -------------------------------------------------------------------

// RolePackage

// required uint32 maxGrid = 1 [default = 0];
inline bool RolePackage::has_maxgrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RolePackage::set_has_maxgrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RolePackage::clear_has_maxgrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RolePackage::clear_maxgrid() {
  maxgrid_ = 0u;
  clear_has_maxgrid();
}
inline ::google::protobuf::uint32 RolePackage::maxgrid() const {
  // @@protoc_insertion_point(field_get:db.RolePackage.maxGrid)
  return maxgrid_;
}
inline void RolePackage::set_maxgrid(::google::protobuf::uint32 value) {
  set_has_maxgrid();
  maxgrid_ = value;
  // @@protoc_insertion_point(field_set:db.RolePackage.maxGrid)
}

// repeated .db.RolePackGrid grids = 2;
inline int RolePackage::grids_size() const {
  return grids_.size();
}
inline void RolePackage::clear_grids() {
  grids_.Clear();
}
inline const ::db::RolePackGrid& RolePackage::grids(int index) const {
  // @@protoc_insertion_point(field_get:db.RolePackage.grids)
  return grids_.Get(index);
}
inline ::db::RolePackGrid* RolePackage::mutable_grids(int index) {
  // @@protoc_insertion_point(field_mutable:db.RolePackage.grids)
  return grids_.Mutable(index);
}
inline ::db::RolePackGrid* RolePackage::add_grids() {
  // @@protoc_insertion_point(field_add:db.RolePackage.grids)
  return grids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::RolePackGrid >&
RolePackage::grids() const {
  // @@protoc_insertion_point(field_list:db.RolePackage.grids)
  return grids_;
}
inline ::google::protobuf::RepeatedPtrField< ::db::RolePackGrid >*
RolePackage::mutable_grids() {
  // @@protoc_insertion_point(field_mutable_list:db.RolePackage.grids)
  return &grids_;
}

// -------------------------------------------------------------------

// RoleGrowth

// required uint32 level = 1 [default = 1];
inline bool RoleGrowth::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleGrowth::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleGrowth::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleGrowth::clear_level() {
  level_ = 1u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleGrowth::level() const {
  // @@protoc_insertion_point(field_get:db.RoleGrowth.level)
  return level_;
}
inline void RoleGrowth::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.RoleGrowth.level)
}

// required uint32 exp = 2 [default = 0];
inline bool RoleGrowth::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleGrowth::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleGrowth::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleGrowth::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 RoleGrowth::exp() const {
  // @@protoc_insertion_point(field_get:db.RoleGrowth.exp)
  return exp_;
}
inline void RoleGrowth::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:db.RoleGrowth.exp)
}

// -------------------------------------------------------------------

// RoleStage

// required uint32 curStage = 1 [default = 0];
inline bool RoleStage::has_curstage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleStage::set_has_curstage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleStage::clear_has_curstage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleStage::clear_curstage() {
  curstage_ = 0u;
  clear_has_curstage();
}
inline ::google::protobuf::uint32 RoleStage::curstage() const {
  // @@protoc_insertion_point(field_get:db.RoleStage.curStage)
  return curstage_;
}
inline void RoleStage::set_curstage(::google::protobuf::uint32 value) {
  set_has_curstage();
  curstage_ = value;
  // @@protoc_insertion_point(field_set:db.RoleStage.curStage)
}

// -------------------------------------------------------------------

// RoleSNS

// required uint32 maxfrinds = 1 [default = 5];
inline bool RoleSNS::has_maxfrinds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSNS::set_has_maxfrinds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSNS::clear_has_maxfrinds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSNS::clear_maxfrinds() {
  maxfrinds_ = 5u;
  clear_has_maxfrinds();
}
inline ::google::protobuf::uint32 RoleSNS::maxfrinds() const {
  // @@protoc_insertion_point(field_get:db.RoleSNS.maxfrinds)
  return maxfrinds_;
}
inline void RoleSNS::set_maxfrinds(::google::protobuf::uint32 value) {
  set_has_maxfrinds();
  maxfrinds_ = value;
  // @@protoc_insertion_point(field_set:db.RoleSNS.maxfrinds)
}

// -------------------------------------------------------------------

// RoleActInfo

// optional uint32 dummy = 1;
inline bool RoleActInfo::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleActInfo::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleActInfo::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleActInfo::clear_dummy() {
  dummy_ = 0u;
  clear_has_dummy();
}
inline ::google::protobuf::uint32 RoleActInfo::dummy() const {
  // @@protoc_insertion_point(field_get:db.RoleActInfo.dummy)
  return dummy_;
}
inline void RoleActInfo::set_dummy(::google::protobuf::uint32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:db.RoleActInfo.dummy)
}

// -------------------------------------------------------------------

// RoleExt

// required uint32 dummy = 1;
inline bool RoleExt::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleExt::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleExt::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleExt::clear_dummy() {
  dummy_ = 0u;
  clear_has_dummy();
}
inline ::google::protobuf::uint32 RoleExt::dummy() const {
  // @@protoc_insertion_point(field_get:db.RoleExt.dummy)
  return dummy_;
}
inline void RoleExt::set_dummy(::google::protobuf::uint32 value) {
  set_has_dummy();
  dummy_ = value;
  // @@protoc_insertion_point(field_set:db.RoleExt.dummy)
}

// -------------------------------------------------------------------

// Role__PrimaryKey

// optional uint32 rid = 1;
inline bool Role__PrimaryKey::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role__PrimaryKey::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role__PrimaryKey::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role__PrimaryKey::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 Role__PrimaryKey::rid() const {
  // @@protoc_insertion_point(field_get:db.Role._PrimaryKey.rid)
  return rid_;
}
inline void Role__PrimaryKey::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:db.Role._PrimaryKey.rid)
}

// -------------------------------------------------------------------

// Role__MaxLength

// optional uint32 name = 1 [default = 32];
inline bool Role__MaxLength::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role__MaxLength::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role__MaxLength::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role__MaxLength::clear_name() {
  name_ = 32u;
  clear_has_name();
}
inline ::google::protobuf::uint32 Role__MaxLength::name() const {
  // @@protoc_insertion_point(field_get:db.Role._MaxLength.name)
  return name_;
}
inline void Role__MaxLength::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:db.Role._MaxLength.name)
}

// -------------------------------------------------------------------

// Role

// required uint64 rid = 1;
inline bool Role::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
inline ::google::protobuf::uint64 Role::rid() const {
  // @@protoc_insertion_point(field_get:db.Role.rid)
  return rid_;
}
inline void Role::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:db.Role.rid)
}

// required string name = 2;
inline bool Role::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Role::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Role::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Role::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Role::name() const {
  // @@protoc_insertion_point(field_get:db.Role.name)
  return *name_;
}
inline void Role::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:db.Role.name)
}
inline void Role::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:db.Role.name)
}
inline void Role::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:db.Role.name)
}
inline ::std::string* Role::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:db.Role.name)
  return name_;
}
inline ::std::string* Role::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Role::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.name)
}

// required .db.RoleBase base = 3;
inline bool Role::has_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Role::set_has_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Role::clear_has_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Role::clear_base() {
  if (base_ != NULL) base_->::db::RoleBase::Clear();
  clear_has_base();
}
inline const ::db::RoleBase& Role::base() const {
  // @@protoc_insertion_point(field_get:db.Role.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::db::RoleBase* Role::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::db::RoleBase;
  // @@protoc_insertion_point(field_mutable:db.Role.base)
  return base_;
}
inline ::db::RoleBase* Role::release_base() {
  clear_has_base();
  ::db::RoleBase* temp = base_;
  base_ = NULL;
  return temp;
}
inline void Role::set_allocated_base(::db::RoleBase* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.base)
}

// required .db.RoleHeroInfo hero = 4;
inline bool Role::has_hero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Role::set_has_hero() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Role::clear_has_hero() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Role::clear_hero() {
  if (hero_ != NULL) hero_->::db::RoleHeroInfo::Clear();
  clear_has_hero();
}
inline const ::db::RoleHeroInfo& Role::hero() const {
  // @@protoc_insertion_point(field_get:db.Role.hero)
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::db::RoleHeroInfo* Role::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::db::RoleHeroInfo;
  // @@protoc_insertion_point(field_mutable:db.Role.hero)
  return hero_;
}
inline ::db::RoleHeroInfo* Role::release_hero() {
  clear_has_hero();
  ::db::RoleHeroInfo* temp = hero_;
  hero_ = NULL;
  return temp;
}
inline void Role::set_allocated_hero(::db::RoleHeroInfo* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    set_has_hero();
  } else {
    clear_has_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.hero)
}

// required .db.RolePackage pack = 5;
inline bool Role::has_pack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Role::set_has_pack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Role::clear_has_pack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Role::clear_pack() {
  if (pack_ != NULL) pack_->::db::RolePackage::Clear();
  clear_has_pack();
}
inline const ::db::RolePackage& Role::pack() const {
  // @@protoc_insertion_point(field_get:db.Role.pack)
  return pack_ != NULL ? *pack_ : *default_instance_->pack_;
}
inline ::db::RolePackage* Role::mutable_pack() {
  set_has_pack();
  if (pack_ == NULL) pack_ = new ::db::RolePackage;
  // @@protoc_insertion_point(field_mutable:db.Role.pack)
  return pack_;
}
inline ::db::RolePackage* Role::release_pack() {
  clear_has_pack();
  ::db::RolePackage* temp = pack_;
  pack_ = NULL;
  return temp;
}
inline void Role::set_allocated_pack(::db::RolePackage* pack) {
  delete pack_;
  pack_ = pack;
  if (pack) {
    set_has_pack();
  } else {
    clear_has_pack();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.pack)
}

// required .db.RoleGrowth grow = 6;
inline bool Role::has_grow() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Role::set_has_grow() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Role::clear_has_grow() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Role::clear_grow() {
  if (grow_ != NULL) grow_->::db::RoleGrowth::Clear();
  clear_has_grow();
}
inline const ::db::RoleGrowth& Role::grow() const {
  // @@protoc_insertion_point(field_get:db.Role.grow)
  return grow_ != NULL ? *grow_ : *default_instance_->grow_;
}
inline ::db::RoleGrowth* Role::mutable_grow() {
  set_has_grow();
  if (grow_ == NULL) grow_ = new ::db::RoleGrowth;
  // @@protoc_insertion_point(field_mutable:db.Role.grow)
  return grow_;
}
inline ::db::RoleGrowth* Role::release_grow() {
  clear_has_grow();
  ::db::RoleGrowth* temp = grow_;
  grow_ = NULL;
  return temp;
}
inline void Role::set_allocated_grow(::db::RoleGrowth* grow) {
  delete grow_;
  grow_ = grow;
  if (grow) {
    set_has_grow();
  } else {
    clear_has_grow();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.grow)
}

// required .db.RoleStage stage = 7;
inline bool Role::has_stage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Role::set_has_stage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Role::clear_has_stage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Role::clear_stage() {
  if (stage_ != NULL) stage_->::db::RoleStage::Clear();
  clear_has_stage();
}
inline const ::db::RoleStage& Role::stage() const {
  // @@protoc_insertion_point(field_get:db.Role.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::db::RoleStage* Role::mutable_stage() {
  set_has_stage();
  if (stage_ == NULL) stage_ = new ::db::RoleStage;
  // @@protoc_insertion_point(field_mutable:db.Role.stage)
  return stage_;
}
inline ::db::RoleStage* Role::release_stage() {
  clear_has_stage();
  ::db::RoleStage* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void Role::set_allocated_stage(::db::RoleStage* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    set_has_stage();
  } else {
    clear_has_stage();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.stage)
}

// required .db.RoleSNS sns = 8;
inline bool Role::has_sns() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Role::set_has_sns() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Role::clear_has_sns() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Role::clear_sns() {
  if (sns_ != NULL) sns_->::db::RoleSNS::Clear();
  clear_has_sns();
}
inline const ::db::RoleSNS& Role::sns() const {
  // @@protoc_insertion_point(field_get:db.Role.sns)
  return sns_ != NULL ? *sns_ : *default_instance_->sns_;
}
inline ::db::RoleSNS* Role::mutable_sns() {
  set_has_sns();
  if (sns_ == NULL) sns_ = new ::db::RoleSNS;
  // @@protoc_insertion_point(field_mutable:db.Role.sns)
  return sns_;
}
inline ::db::RoleSNS* Role::release_sns() {
  clear_has_sns();
  ::db::RoleSNS* temp = sns_;
  sns_ = NULL;
  return temp;
}
inline void Role::set_allocated_sns(::db::RoleSNS* sns) {
  delete sns_;
  sns_ = sns;
  if (sns) {
    set_has_sns();
  } else {
    clear_has_sns();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.sns)
}

// required .db.RoleActInfo act = 9;
inline bool Role::has_act() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Role::set_has_act() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Role::clear_has_act() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Role::clear_act() {
  if (act_ != NULL) act_->::db::RoleActInfo::Clear();
  clear_has_act();
}
inline const ::db::RoleActInfo& Role::act() const {
  // @@protoc_insertion_point(field_get:db.Role.act)
  return act_ != NULL ? *act_ : *default_instance_->act_;
}
inline ::db::RoleActInfo* Role::mutable_act() {
  set_has_act();
  if (act_ == NULL) act_ = new ::db::RoleActInfo;
  // @@protoc_insertion_point(field_mutable:db.Role.act)
  return act_;
}
inline ::db::RoleActInfo* Role::release_act() {
  clear_has_act();
  ::db::RoleActInfo* temp = act_;
  act_ = NULL;
  return temp;
}
inline void Role::set_allocated_act(::db::RoleActInfo* act) {
  delete act_;
  act_ = act;
  if (act) {
    set_has_act();
  } else {
    clear_has_act();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.act)
}

// required .db.RoleExt ext = 10;
inline bool Role::has_ext() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Role::set_has_ext() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Role::clear_has_ext() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Role::clear_ext() {
  if (ext_ != NULL) ext_->::db::RoleExt::Clear();
  clear_has_ext();
}
inline const ::db::RoleExt& Role::ext() const {
  // @@protoc_insertion_point(field_get:db.Role.ext)
  return ext_ != NULL ? *ext_ : *default_instance_->ext_;
}
inline ::db::RoleExt* Role::mutable_ext() {
  set_has_ext();
  if (ext_ == NULL) ext_ = new ::db::RoleExt;
  // @@protoc_insertion_point(field_mutable:db.Role.ext)
  return ext_;
}
inline ::db::RoleExt* Role::release_ext() {
  clear_has_ext();
  ::db::RoleExt* temp = ext_;
  ext_ = NULL;
  return temp;
}
inline void Role::set_allocated_ext(::db::RoleExt* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    set_has_ext();
  } else {
    clear_has_ext();
  }
  // @@protoc_insertion_point(field_set_allocated:db.Role.ext)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::db::RoleBase_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::RoleBase_Gender>() {
  return ::db::RoleBase_Gender_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_2fRole_2eproto__INCLUDED
